#Packages
library(tidyverse)
library(ggplot2)
library(caret)
library(rsample)
library(recipes)
library(broom) #for cross validation of glm
#library(magrittr)
#library(modelr)
#Data
obesity <- read.csv("ObesityDataSet_raw_and_data_sinthetic.csv")
#changes variables into factors
obesity$Gender =as.factor(obesity$Gender)
obesity$family_history_with_overweight=as.factor(obesity$family_history_with_overweight)
obesity$FAVC =as.factor(obesity$FAVC)
obesity$CAEC =as.factor(obesity$CAEC)
obesity$SMOKE =as.factor(obesity$SMOKE)
obesity$SCC =as.factor(obesity$SCC)
obesity$CALC =as.factor(obesity$CALC)
obesity$MTRANS =as.factor(obesity$MTRANS)
obesity$NObeyesdad =as.factor(obesity$NObeyesdad)
# initial dimension
dim(obesity)
glimpse(obesity)
head(obesity$NObeyesdad)
#Splitting the data by 70/30
set.seed(123)
split <- initial_split(obesity, strata = "NObeyesdad", prop = 0.7)
obesity_train <- training(split)
obesity_test  <- testing(split)
# Normalize to resolve numeric feature skewness and standardize (center and scale) numeric features
recipe(NObeyesdad ~ ., data = obesity_train) %>%
step_YeoJohnson(all_numeric()) %>%
step_center(all_numeric(), -all_outcomes()) %>%
step_scale(all_numeric(), -all_outcomes())
#Filter out zero or near-zero variance features
caret::nearZeroVar(obesity_train, saveMetrics = TRUE) %>%
tibble::rownames_to_column() %>%
#should I remove?
filter(nzv)
#Perform dimension reduction on numeric features.
recipe(NObeyesdad ~ ., data = obesity_train) %>%
step_center(all_numeric()) %>%
step_scale(all_numeric()) %>%
step_pca(all_numeric(), threshold = .95)
# One-hot or dummy encode categorical features.
blueprint <- recipe(NObeyesdad ~ ., data = obesity_train) %>%
step_nzv(all_nominal()) %>%
step_integer(matches("Gender,family_history,FAVC,CAEC,SMOKE,SCC,
CALC,MTRANS,NObeyesdad")) %>%
step_dummy(all_nominal(), one_hot = TRUE)
summary(blueprint)
#GLM
glm_obesity1 <-glm(NObeyesdad ~ Weight, data = obesity_train,family="binomial")
tidy(glm_obesity1)
#Model concerns
coef(glm_obesity1)
# calculate predictions using validation set
obesity_test_accuracy <- augment(glm_obesity1, data = obesity_train,
type.predict = "response") %>%
mutate(pred = as.numeric(.fitted > .5))
# calculate test error rate
mean(obesity_test_accuracy$NObeyesdad != obesity_test_accuracy$pred, na.rm = TRUE)
#plot
plot(glm_obesity1)
set.seed(123)
cv_model1 <- train(
NObeyesdad ~ Weight,
data = obesity_train,
method = "glm",
family = "binomial",
trControl = trainControl(method = "cv", number = 10)
)
#GLM
glm_obesity1 <-glm(NObeyesdad ~ Weight, data = obesity_train,family="binomial")
tidy(glm_obesity1)
exp(cbind(OR = coef(glm_obesity1), confint(glm_obesity1)))
# calculate predictions using validation set
obesity_test_accuracy <- augment(glm_obesity1, data = obesity_train,
type.predict = "response") %>%
mutate(pred = as.numeric(.fitted > .5))
mean(obesity_test_accuracy$NObeyesdad != obesity_test_accuracy$pred, na.rm = TRUE)
glm_obesity2 <- glm(NObeyesdad ~ family_history_with_overweight + Weight, data = obesity_train, family = "binomial")
tidy(glm_obesity2)
# calculate predictions using validation set
obesity_test_accuracy2 <- augment(glm_obesity2, data = obesity_train,
type.predict = "response") %>%
mutate(pred2 = as.numeric(.fitted > .5))
mean(obesity_test_accuracy2$NObeyesdad != obesity_test_accuracy2$pred, na.rm = TRUE)
mean(obesity_test_accuracy2$NObeyesdad != obesity_test_accuracy2$pred2, na.rm = TRUE)
glm_obesity3 <- glm(NObeyesdad ~ ., data = obesity_train, family = "binomial")
tidy(glm_obesity3)
obesity_test_accuracy3 <- augment(glm_obesity3, data = obesity_train,
type.predict = "response") %>%
mutate(pred2 = as.numeric(.fitted > .5))
mean(obesity_test_accuracy3$NObeyesdad != obesity_test_accuracy2$pred2, na.rm = TRUE)
